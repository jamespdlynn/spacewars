{
  "name": "microjs",
  "description": "Binary protocol buffer for javascript",
  "version": "0.9.3",
  "author": {
    "name": "James Lynn",
    "email": "james.lynn@aristobotgames.com"
  },
  "devDependencies": {
    "node-minify": "*",
    "nodeunit": "*",
    "websocket": "*",
    "express": "*",
    "requirejs": "*",
    "backbone": "*"
  },
  "keywords": [
    "microjs",
    "protocol",
    "buffer",
    "browser",
    "javascript",
    "binary",
    "serialize",
    "binaryjs",
    "json",
    "websocket"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/jamespdlynn/microjs.git"
  },
  "main": "index",
  "engines": {
    "node": ">= 0.8.0"
  },
  "readmeFilename": "README.md",
  "readme": "MicroJS\r\n==========================\r\n\r\nA protocol buffer for javascript used to serialize JSON into miniature binary packets.\r\n\r\n\r\nWhy use MicroJS?\r\n--------\r\n\r\nBy using predefined schemas to map your JSON objects into binary array buffers, MicroJS achieves on average a much better compression rate\r\nthan standard string compression libraries such as GZip (with a much lower computational cost).\r\n\r\nThis makes it an excellent tool for applications or games that use web sockets to rapidly transfer large amounts of data between the client and server.\r\n\r\n#### Average compression rates:\r\n\r\n- zlib/gzip: **73%**\r\n- microjs: **83%**\r\n\r\n\r\nTested In\r\n--------\r\n\r\n- Node.js (0.10.18)\r\n- Google Chrome (31)\r\n- Mozilla Firefox (23)\r\n- Safari (6)\r\n- Internet Explorer (11)\r\n\r\n\r\nInstallation\r\n---------\r\n\r\n### Node.js\r\n\r\nIn your project root:\r\n\r\n    $ npm install microjs\r\n\r\nThen in your code:\r\n\r\n    var micro = require('microjs');\r\n\r\n\r\n### Browser\r\n\r\nCopy **BOTH** the \"micro.js\" and \"browser-buffer.js\" file into your public directory.\r\n\r\nThen in your HTML:\r\n\r\n    <script type=\"text/javascript\" src=\"browser-buffer.js\"></script>\r\n    <script type=\"text/javascript\" src=\"micro.js\"></script>\r\n\r\nOr optionally you can load one or both libraries as modules, for example:\r\n\r\n    require(['browser-buffer','micro'], function(Buffer, micro){\r\n      ...\r\n    });\r\n\r\nSchemas\r\n---------\r\n\r\n####More documentation coming soon!\r\n\r\nFor now please look in the the \"benchmarks\" and \"examples\" directories for direction as to how to properly register schemas, and serialize/deserialize JSON data.\r\n\r\n\r\n\r\n",
  "bugs": {
    "url": "https://github.com/jamespdlynn/microjs/issues"
  },
  "_id": "microjs@0.9.3",
  "_from": "microjs@"
}
